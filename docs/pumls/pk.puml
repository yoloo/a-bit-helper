@startuml
    |属性计算->setupCharbase|
    start
        #orange:基础属性
        体质
        charstate.wdCon
        智力
        charstate.wdInt
        力量
        charstate.wdStr
        敏捷
        charstate.wdDex
        精神
        charstate.wdMen

        物攻
        charstate.pdamage
        物防
        charstate.pdefence
        魔攻
        charstate.mdamage
        魔防
        charstate.mdefence

        血量
        charstate.hp;

        :...;
        :**charstate.wdCon** <- value
        **charstate.wdInt** <- value
        **charstate.wdStr** <- value
        **charstate.wdDex** <- value
        **charstate.wdMen** <- value;
        note right
            体智力敏精加成(数值/百分比)
        end note
        :...;

        :**charstate.pdamage** <- value
        **charstate.pdefence** <- value
        **charstate.mdamage** <- value
        **charstate.mdefence** <- value
        **charstate.maxhp** <- value;
        note right
            攻防血加成(数值百分比)
            装备、套装、技能、BUFF等
        end note
        :...;

        :**charstate.pdamage** <- charstate.wdStr
        **charstate.mdamage** <- charstate.wdInt
        **charstate.pdefence** <- charstate.wdDex & charstate.wdMen
        **charstate.mdefence** <- charstate.wdDex & charstate.wdMen
        **charstate.maxhp** <- charstate.wdCon;
        note right
            体智力敏精->攻防血
        end note
        :...;

        :**charstate.pdamage** <- value
        **charstate.pdefence** <- value
        **charstate.mdamage** <- value
        **charstate.mdefence** <- value
        **charstate.maxhp** <- value;
        note right
            攻防血加成(数值百分比)
            装备、套装、技能、BUFF等
        end note
        :...;
    stop

    start
        |pk预处理1->calPreValue|

        #AAAAAA:charstate.pdamage
        charstate.mdamage
        charstate.pdefence
        charstate.mdefence;

        :...;
        :RealPkCharstateAttr::reduce()
        charstate.mdamage = charstate.mdamage - value
        charstate.pdamage = charstate.pdamage - value
        charstate.mdefence = charstate.mdefence - value
        charstate.pdefence = charstate.pdefence - value;
        :...;

        :**pkpreValue.nofivemdam** <- charstate.mdamage
        **pkpreValue.nofivedam** <- charstate.pdamage
        **pkpreValue.nofivemdef** <- charstate.mdefence
        **pkpreValue.nofivedef** <- charstate.pdefence;
    stop

    start
        |pk预处理2->preAttackMe|

        #AAAAAA:攻击者:
        pkpreValue.nofivemdam
        pkpreValue.nofivedam
        ...

        防御者:
        pkpreValue.nofivemdef
        pkpreValue.nofivepdef
        ...;

        fork
            :calmdamU2U;

            :攻击者:
            **pkValue.mdamage** <- pkpreValue.nofivemdam

            防御者:
            **pkValue.mdefence** <- pkpreValue.nofivemdef;

            :...;
        fork again
            :calpdamU2U;

            :攻击者:
            **pkValue.pdamage** <- pkpreValue.nofivedam

            防御者:
            **pkValue.pdefence** <- pkpreValue.nofivedef;

            :...;
        fork again
            :calmdamU2N;

            :...;
        fork again
            :calpdamU2N;

            :...;
        fork again
            :...;
        endfork
    stop

    start
        |伤害计算1->AttackMe|

        #AAAAAA:攻击者:
        pkValue.mdamage
        pkValue.pdamage

        防御者:
        pkValue.mdefence
        pkValue.pdefence;

        :**tmpAtt** <- (物攻 ? pkValue.pdamage : pkvalue.mdamage)
        **tmpDef** <- (魔攻 ? pkValue.pdefence : pkValue.mdefence);

        :**tmpAtt** = **tmpAtt** * rate;
        note right
            攻击者->技能状态:919/918
        end note

        :**tmpDef** = **tmpDef** * (1 - rate);
        note right
            防御者->技能状态:926
        end note

        :...;
        #AAAAAA:攻击力:tmpAtt
        防御力:tmpDef;

        :calcDamage;
        fork
            :normalDamage_U2NU;
            note left
                人攻击人
            end note

            -> attLevel:攻击等级; defLevel:防御等级;

            :**攻击边际系数**->1
            **攻击基线**->damB.getByLevel(defLevel);

            if (tmpDef <= tmpAtt * **攻击边际系数**) then (yes)
                :**dam** = tmpAtt * (0.04 * tmpAtt + 0.1 * **攻击基线**) / (0.07 * tmpAtt + 0.07 * **攻击基线** + 0.7 * tmpDef);
            else (no)
                :tmp = (0.07 * tmpAtt + 0.07 * **攻击基线** + 0.7 * tmpAtt * **攻击边际系数**)
                **防御边际系数** = 0.7 * tmpAtt * (0.04 * tmpAtt + 0.1 * **攻击基线**) / (tmp * tmp)

                dam1 = tmpAtt * (0.04 * tmpAtt + 0.1 * **攻击基线**) / (0.07 * tmpAtt + 0.07 * **攻击基线** + 0.7 * tmpAtt * **攻击边际系数**)
                **dam** = dam1 - (tmpDef - tmpAtt * **攻击边际系数**) * **防御边际系数**;
            endif

            if (**dam** < tmpAtt * 0.05) then (yes)
                :**dam** = (0.04 ~ 0.05) * tmpAtt;
            endif
        fork again
            :normalDamge;
            note left
                人攻击宠物
            end note
        fork again
            : ...;
        endfork
    stop

    start
        |伤害计算2->AttackMe|
        #AAAAAA:dam;
        :**dwDam** <- dam;

        :...;
        :**dwDam** = **dwDam** * 2;
        note right
            攻击者->技能状态:585
        end note

        :**dwDam** = **dwDam** * (1 + rate);
        note right
            防御者->技能状态:925
        end note

        :**dwDam** = **dwDam** * (1 - rate);
        note right
            防御者->技能状态:893
        end note

        :**dwDam** = **dwDam** * (1 - rate);
        note right
            防御者->技能状态:1195
        end note

        :**dwDam** = nrb->baseAtt + (**dwDam** - nrb->baseAtt) * nrb->rate;
        note right
            NpcAttackReduce.tbl
        end note

        :**dwDam** = maxdam;
        note right
            xml::neutralactivity.npc.maxdam()
        end note
        :...;

        #AAAAAA:dwDam;
        :**dwDamDef** <- dwDam;

        :...;
        :**dwDamDef** += **dwDamDef** * rate;
        note right
            攻击者->技能状态:479
        end note

        :...;
        :**dwDamDef** *= 0.7;
        note right
            防御者->人物状态:USTATE_SHOUSHANG
        end note

        :**dwDamDef** *= 0.25;
        note right
            防御者->人物状态:USTATE_HUNMI
        end note
        :...;

    stop

    start
        |防御者->directDamage|
        #AAAAAA:dwDamDef;
        :**realReduce** <- dwDamDef;

        :...;
        :**realReduce** = realReduce * (1- rate);
        note right
            防御者->技能状态:1138
        end note
        :...;

        #HotPink:charbase.hp <- realReduce;
        note right
            防御者->血量变化
        end note
    stop

    start
        |防御者->reflectDam|
        #AAAAAA:wdHP;
        :**dwDamSelf** <- wdHP;

        :...;
        :**dwDamSelf** += value;
        note right
            防御者->技能状态:45
        end note
        :...;

        :...;
        :**dwDamSelf** -= value;
        note right
            攻击者->降低反伤:holylevel.getAbilityItemValue
        end note
        :...;
    stop

    start
        |攻击者->directDamage|
        #AAAAAA:dwDamSelf;
        :**realReduce** <- dwDamSelf;

        :...;
        :**realReduce** = realReduce * (1- rate);
        note right
            防御者->技能状态:1138
        end note
        :...;

        #HotPink:charbase.hp <- realReduce;
        note right
            攻击者->血量变化
        end note
    stop
@enduml